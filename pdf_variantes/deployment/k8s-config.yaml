"""
PDF Variantes Kubernetes Configuration
Configuración de Kubernetes para el sistema PDF Variantes
"""

# Configuración de Kubernetes para PDF Variantes
k8s_config = """
apiVersion: v1
kind: Namespace
metadata:
  name: pdf-variantes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pdf-variantes-config
  namespace: pdf-variantes
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  DATABASE_URL: "postgresql://pdf_user:pdf_password@postgres-service:5432/pdf_variantes"
  REDIS_URL: "redis://redis-service:6379"
  OPENAI_API_KEY: "your-openai-api-key"
  ANTHROPIC_API_KEY: "your-anthropic-api-key"
  HUGGINGFACE_API_KEY: "your-huggingface-api-key"
  SECRET_KEY: "your-secret-key"
  CORS_ORIGINS: "https://yourdomain.com"
  GPU_ENABLED: "true"
  QUANTUM_BACKEND: "qasm_simulator"
  PLUGINS_DIR: "/app/plugins"
  CACHE_TTL_SECONDS: "3600"
---
apiVersion: v1
kind: Secret
metadata:
  name: pdf-variantes-secrets
  namespace: pdf-variantes
type: Opaque
data:
  database-password: cGRmX3Bhc3N3b3Jk  # pdf_password base64 encoded
  redis-password: cmVkaXNfcGFzc3dvcmQ=  # redis_password base64 encoded
  secret-key: eW91ci1zZWNyZXQta2V5  # your-secret-key base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-variantes-api
  namespace: pdf-variantes
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pdf-variantes-api
  template:
    metadata:
      labels:
        app: pdf-variantes-api
    spec:
      containers:
      - name: pdf-variantes-api
        image: pdf-variantes:latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: REDIS_URL
        - name: OPENAI_API_KEY
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: ANTHROPIC_API_KEY
        - name: HUGGINGFACE_API_KEY
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: HUGGINGFACE_API_KEY
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pdf-variantes-secrets
              key: secret-key
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: CORS_ORIGINS
        - name: GPU_ENABLED
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: GPU_ENABLED
        - name: QUANTUM_BACKEND
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: QUANTUM_BACKEND
        - name: PLUGINS_DIR
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: PLUGINS_DIR
        - name: CACHE_TTL_SECONDS
          valueFrom:
            configMapKeyRef:
              name: pdf-variantes-config
              key: CACHE_TTL_SECONDS
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: variants
          mountPath: /app/variants
        - name: exports
          mountPath: /app/exports
        - name: logs
          mountPath: /app/logs
        - name: plugins
          mountPath: /app/plugins
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: pdf-variantes-uploads-pvc
      - name: variants
        persistentVolumeClaim:
          claimName: pdf-variantes-variants-pvc
      - name: exports
        persistentVolumeClaim:
          claimName: pdf-variantes-exports-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: pdf-variantes-logs-pvc
      - name: plugins
        persistentVolumeClaim:
          claimName: pdf-variantes-plugins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pdf-variantes-service
  namespace: pdf-variantes
spec:
  selector:
    app: pdf-variantes-api
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-variantes-uploads-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-variantes-variants-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-variantes-exports-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-variantes-logs-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-variantes-plugins-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: pdf-variantes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "pdf_variantes"
        - name: POSTGRES_USER
          value: "pdf_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pdf-variantes-secrets
              key: database-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: pdf-variantes
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: pdf-variantes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: pdf-variantes
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: pdf-variantes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pdf-variantes-ingress
  namespace: pdf-variantes
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - yourdomain.com
    secretName: pdf-variantes-tls
  rules:
  - host: yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pdf-variantes-service
            port:
              number: 8000
---
apiVersion: v1
kind: Secret
metadata:
  name: pdf-variantes-tls
  namespace: pdf-variantes
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Your TLS certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Your TLS private key
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pdf-variantes-hpa
  namespace: pdf-variantes
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pdf-variantes-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pdf-variantes-pdb
  namespace: pdf-variantes
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: pdf-variantes-api
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: pdf-variantes-monitor
  namespace: pdf-variantes
spec:
  selector:
    matchLabels:
      app: pdf-variantes-api
  endpoints:
  - port: 8000
    path: /metrics
    interval: 30s
"""

# Guardar configuración
def save_k8s_config():
    """Guardar configuración de Kubernetes"""
    with open("k8s-config.yaml", "w") as f:
        f.write(k8s_config)
    print("Kubernetes configuration saved to k8s-config.yaml")

if __name__ == "__main__":
    save_k8s_config()
