# PDF Variantes API - Docker Compose Configuration

version: '3.8'

services:
  # Main API Service
  api:
    build: .
    container_name: pdf_variantes_api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://pdf_user:pdf_password@db:5432/pdf_variantes
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-this-in-production
    volumes:
      - ./uploads:/app/uploads
      - ./variants:/app/variants
      - ./exports:/app/exports
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - pdf_variantes_network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pdf_variantes_db
    environment:
      - POSTGRES_DB=pdf_variantes
      - POSTGRES_USER=pdf_user
      - POSTGRES_PASSWORD=pdf_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - pdf_variantes_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pdf_variantes_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - pdf_variantes_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pdf_variantes_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - pdf_variantes_network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: pdf_variantes_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - pdf_variantes_network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: pdf_variantes_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - pdf_variantes_network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  pdf_variantes_network:
    driver: bridge
