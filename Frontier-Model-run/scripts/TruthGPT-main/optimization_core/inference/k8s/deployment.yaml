apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-api
  namespace: inference
  labels:
    app: inference-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: inference-api
  template:
    metadata:
      labels:
        app: inference-api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: inference-api
      containers:
      - name: inference-api
        image: your-registry/frontier-inference-api:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: TRUTHGPT_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: inference-secrets
              key: api-token
        - name: TRUTHGPT_CONFIG
          value: "/app/configs/llm_default.yaml"
        - name: PORT
          value: "8080"
        - name: ENVIRONMENT
          value: "production"
        - name: BATCH_MAX_SIZE
          value: "32"
        - name: BATCH_FLUSH_TIMEOUT_MS
          value: "20"
        - name: RATE_LIMIT_RPM
          value: "600"
        - name: CACHE_BACKEND
          value: "redis"
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: inference-config
              key: redis-url
        - name: ENABLE_METRICS
          value: "true"
        - name: ENABLE_TRACING
          value: "true"
        - name: ENABLE_STRUCTURED_LOGGING
          value: "true"
        - name: OTLP_ENDPOINT
          value: "otel-collector:4317"
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
            nvidia.com/gpu: "1"  # If using GPU
          limits:
            cpu: "2000m"
            memory: "4Gi"
            nvidia.com/gpu: "1"  # If using GPU
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/configs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: inference-config-maps
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: inference-api
  namespace: inference
  labels:
    app: inference-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: inference-api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: inference-api-hpa
  namespace: inference
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: inference-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inference-config
  namespace: inference
data:
  redis-url: "redis://redis:6379/0"
  batch-max-size: "32"
  batch-flush-timeout-ms: "20"

---
apiVersion: v1
kind: Secret
metadata:
  name: inference-secrets
  namespace: inference
type: Opaque
stringData:
  api-token: "your-secret-token-here"
  webhook-hmac-secret: "your-webhook-secret-here"


