[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "frontier-model-run"
version = "2.0.0"
description = "ðŸš€ Enterprise-grade ML inference platform with advanced features"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Frontier-Model-Run Team"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core Framework
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "torchaudio>=2.1.0",
    
    # LLM Development
    "transformers>=4.35.0",
    "accelerate>=0.25.0",
    "bitsandbytes>=0.41.0",
    "peft>=0.6.0",
    
    # GPU Optimization
    "flash-attn>=2.4.0; platform_machine != 'arm64'",
    "xformers>=0.0.23; platform_machine != 'arm64'",
    
    # Scientific Computing
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "scipy>=1.11.0",
    
    # Web Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    
    # Monitoring & Observability
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.6",
    
    # Storage & Caching
    "redis>=5.0.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "tqdm>=4.66.0",
    
    # Compression
    "brotli>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
gpu = [
    "cupy>=12.3.0",
    "numba>=0.59.0",
]
distributed = [
    "deepspeed>=0.12.0",
    "fairscale>=0.4.13",
]
ui = [
    "gradio>=4.7.0",
    "streamlit>=1.28.0",
]
monitoring = [
    "wandb>=0.16.0",
    "tensorboard>=2.15.0",
]

[project.urls]
Homepage = "https://github.com/frontier-model-run"
Documentation = "https://docs.frontier-model-run.com"
Repository = "https://github.com/frontier-model-run/frontier-model-run"
Issues = "https://github.com/frontier-model-run/frontier-model-run/issues"

[project.scripts]
frontier = "optimization_core.cli:app"

[tool.setuptools]
packages = ["optimization_core"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

