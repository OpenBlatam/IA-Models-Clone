# ðŸš€ ENHANCED LINKEDIN OPTIMIZER v4.0 - COMPLETE DEPENDENCIES
# =============================================================
# This file includes ALL dependencies for the complete v4.0 system including:
# - Core AI/ML libraries
# - Web dashboard (FastAPI, Uvicorn)
# - Security and compliance
# - Real-time analytics
# - Production deployment tools

# Core Python packages
python-dateutil>=2.8.2
pytz>=2023.3
typing-extensions>=4.5.0
dataclasses-json>=0.6.1

# AI/ML Core Libraries
torch>=2.0.0
transformers>=4.30.0
sentence-transformers>=2.2.2
spacy>=3.6.0
textblob>=0.17.1
vaderSentiment>=3.3.2

# Data Science & Analytics
numpy>=1.24.0
pandas>=2.0.0
scikit-learn>=1.3.0
matplotlib>=3.7.0
seaborn>=0.12.0
scipy>=1.10.0

# Web Framework & Dashboard
fastapi>=0.100.0
uvicorn[standard]>=0.23.0
pydantic>=2.0.0
python-multipart>=0.0.6
aiofiles>=23.1.0

# Security & Authentication
cryptography>=41.0.0
PyJWT>=2.8.0
passlib[bcrypt]>=1.7.4
python-jose[cryptography]>=3.3.0

# Database & Caching
redis>=4.6.0
aioredis>=2.0.0
sqlalchemy>=2.0.0
alembic>=1.11.0
psycopg2-binary>=2.9.6

# Monitoring & Performance
psutil>=5.9.0
prometheus-client>=0.17.0
structlog>=23.1.0
sentry-sdk[fastapi]>=1.28.0

# HTTP & API
httpx>=0.24.0
aiohttp>=3.8.0
requests>=2.31.0
urllib3>=2.0.0

# Async & Concurrency
asyncio-mqtt>=0.13.0
aio-pika>=9.0.0
celery>=5.3.0

# Configuration & Environment
python-dotenv>=1.0.0
pydantic-settings>=2.0.0
click>=8.1.0
rich>=13.4.0

# Testing & Development
pytest>=7.4.0
pytest-asyncio>=0.21.0
pytest-cov>=4.1.0
black>=23.7.0
flake8>=6.0.0
mypy>=1.5.0

# Production & Deployment
gunicorn>=21.2.0
supervisor>=4.2.5
fabric>=2.7.0
invoke>=2.0.0

# Documentation & Utilities
mkdocs>=1.5.0
mkdocs-material>=9.2.0
sphinx>=7.1.0
sphinx-rtd-theme>=1.3.0

# Additional AI/ML Tools
openai>=1.0.0
anthropic>=0.7.0
cohere>=4.20.0
langchain>=0.0.200

# Image & Media Processing
Pillow>=10.0.0
opencv-python>=4.8.0
moviepy>=1.0.3

# Natural Language Processing
nltk>=3.8.1
gensim>=4.3.0
wordcloud>=1.9.2
textstat>=0.7.3

# Time Series & Forecasting
prophet>=1.1.4
statsmodels>=0.14.0
arch>=6.2.0

# Visualization & Reporting
plotly>=5.15.0
bokeh>=3.2.0
dash>=2.11.0
streamlit>=1.25.0

# Cloud & Infrastructure
boto3>=1.28.0
google-cloud-storage>=2.10.0
azure-storage-blob>=12.17.0
docker>=6.1.0

# Monitoring & Observability
jaeger-client>=4.8.0
opentelemetry-api>=1.20.0
opentelemetry-sdk>=1.20.0
opentelemetry-instrumentation-fastapi>=0.40b0

# Performance & Optimization
numba>=0.57.0
cython>=3.0.0
mypy-extensions>=1.0.0

# Development Tools
pre-commit>=3.3.0
tox>=4.6.0
coverage>=7.2.0
bandit>=1.7.0

# System Integration
systemd-python>=235
pywin32>=306; sys_platform == "win32"
psutil>=5.9.0

# WebSocket & Real-time
websockets>=11.0.0
socketio>=5.8.0

# Background Tasks
celery[redis]>=5.3.0
dramatiq>=1.14.0

# Configuration Management
hydra-core>=1.3.0
omegaconf>=2.3.0

# Logging & Debugging
loguru>=0.7.0
ipdb>=0.13.0
debugpy>=1.6.0

# Data Validation & Serialization
marshmallow>=3.20.0
cerberus>=1.3.4
jsonschema>=4.19.0

# API Documentation
drf-spectacular>=0.26.0
apispec>=6.3.0

# Rate Limiting & Caching
slowapi>=0.1.8
cachetools>=5.3.0

# Error Handling & Monitoring
sentry-sdk[fastapi]>=1.28.0
rollbar>=0.16.0

# Development Environment
ipython>=8.14.0
jupyter>=1.0.0
notebook>=7.0.0

# Code Quality
prospector>=1.10.0
radon>=6.0.0
mccabe>=0.7.0

# Performance Profiling
py-spy>=0.3.14
memory-profiler>=0.61.0
line-profiler>=4.1.0

# Security Scanning
safety>=2.3.0
bandit>=1.7.0
semgrep>=1.40.0

# Database Migrations
alembic>=1.11.0
yoyo-migrations>=8.2.0

# API Testing
pytest-asyncio>=0.21.0
httpx>=0.24.0
responses>=0.23.0

# Load Testing
locust>=2.15.0
pytest-benchmark>=4.0.0

# Documentation Generation
sphinx-autodoc-typehints>=1.24.0
sphinx-rtd-theme>=1.3.0

# Code Coverage
coverage>=7.2.0
pytest-cov>=4.1.0

# Type Checking
mypy>=1.5.0
types-requests>=2.31.0
types-PyYAML>=6.0.0

# Environment Management
virtualenv>=20.24.0
pip-tools>=7.3.0

# Package Management
pip>=23.0.0
setuptools>=68.0.0
wheel>=0.41.0

# System Dependencies (install via system package manager)
# Ubuntu/Debian: sudo apt-get install python3-dev build-essential libssl-dev libffi-dev
# CentOS/RHEL: sudo yum install python3-devel gcc openssl-devel libffi-devel
# macOS: brew install openssl libffi

# GPU Support (optional - for CUDA acceleration)
# torch>=2.0.0+cu118 -f https://download.pytorch.org/whl/torch_stable.html

# Development Extras
[dev]
pytest>=7.4.0
pytest-asyncio>=0.21.0
pytest-cov>=4.1.0
black>=23.7.0
flake8>=6.0.0
mypy>=1.5.0
pre-commit>=3.3.0
tox>=4.6.0

# Production Extras
[prod]
gunicorn>=21.2.0
supervisor>=4.2.5
sentry-sdk[fastapi]>=1.28.0
prometheus-client>=0.17.0

# Testing Extras
[test]
pytest>=7.4.0
pytest-asyncio>=0.21.0
pytest-cov>=4.1.0
pytest-benchmark>=4.0.0
responses>=0.23.0
factory-boy>=3.3.0

# Documentation Extras
[docs]
sphinx>=7.1.0
sphinx-rtd-theme>=1.3.0
sphinx-autodoc-typehints>=1.24.0
mkdocs>=1.5.0
mkdocs-material>=9.2.0

# Performance Extras
[perf]
numba>=0.57.0
cython>=3.0.0
py-spy>=0.3.14
memory-profiler>=0.61.0
line-profiler>=4.1.0

# Security Extras
[security]
bandit>=1.7.0
safety>=2.3.0
semgrep>=1.40.0
cryptography>=41.0.0

# Monitoring Extras
[monitoring]
prometheus-client>=0.17.0
jaeger-client>=4.8.0
opentelemetry-api>=1.20.0
opentelemetry-sdk>=1.20.0
sentry-sdk[fastapi]>=1.28.0

# Web Dashboard Extras
[dashboard]
fastapi>=0.100.0
uvicorn[standard]>=0.23.0
pydantic>=2.0.0
websockets>=11.0.0
aiofiles>=23.1.0

# AI/ML Extras
[ai]
torch>=2.0.0
transformers>=4.30.0
sentence-transformers>=2.2.2
spacy>=3.6.0
openai>=1.0.0
anthropic>=0.7.0
langchain>=0.0.200

# Database Extras
[db]
redis>=4.6.0
aioredis>=2.0.0
sqlalchemy>=2.0.0
alembic>=1.11.0
psycopg2-binary>=2.9.6

# Async Extras
[async]
aiohttp>=3.8.0
aio-pika>=9.0.0
celery[redis]>=5.3.0
dramatiq>=1.14.0

# Cloud Extras
[cloud]
boto3>=1.28.0
google-cloud-storage>=2.10.0
azure-storage-blob>=12.17.0
docker>=6.1.0

# Visualization Extras
[viz]
matplotlib>=3.7.0
seaborn>=0.12.0
plotly>=5.15.0
bokeh>=3.2.0
dash>=2.11.0
streamlit>=1.25.0

# NLP Extras
[nlp]
nltk>=3.8.1
gensim>=4.3.0
wordcloud>=1.9.2
textstat>=0.7.3
textblob>=0.17.1
vaderSentiment>=3.3.2

# Time Series Extras
[timeseries]
prophet>=1.1.4
statsmodels>=0.14.0
arch>=6.2.0

# Development Tools Extras
[tools]
ipython>=8.14.0
jupyter>=1.0.0
notebook>=7.0.0
debugpy>=1.6.0
loguru>=0.7.0

# Code Quality Extras
[quality]
black>=23.7.0
flake8>=6.0.0
mypy>=1.5.0
prospector>=1.10.0
radon>=6.0.0
mccabe>=0.7.0

# Performance Profiling Extras
[profiling]
py-spy>=0.3.14
memory-profiler>=0.61.0
line-profiler>=4.1.0
pytest-benchmark>=4.0.0

# Security Scanning Extras
[scanning]
safety>=2.3.0
bandit>=1.7.0
semgrep>=1.40.0

# Database Migration Extras
[migrations]
alembic>=1.11.0
yoyo-migrations>=8.2.0

# API Testing Extras
[apitest]
pytest-asyncio>=0.21.0
httpx>=0.24.0
responses>=0.23.0
factory-boy>=3.3.0

# Load Testing Extras
[loadtest]
locust>=2.15.0
pytest-benchmark>=4.0.0

# Documentation Generation Extras
[docgen]
sphinx>=7.1.0
sphinx-rtd-theme>=1.3.0
sphinx-autodoc-typehints>=1.24.0
mkdocs>=1.5.0
mkdocs-material>=9.2.0

# Type Checking Extras
[types]
mypy>=1.5.0
types-requests>=2.31.0
types-PyYAML>=6.0.0

# Environment Management Extras
[env]
virtualenv>=20.24.0
pip-tools>=7.3.0

# Package Management Extras
[pkg]
pip>=23.0.0
setuptools>=68.0.0
wheel>=0.41.0

# All Extras (install everything)
[all]
# This will install all optional dependencies
# Use: pip install -e ".[all]"

# Minimal Production (core functionality only)
[prod-minimal]
fastapi>=0.100.0
uvicorn[standard]>=0.23.0
pydantic>=2.0.0
torch>=2.0.0
transformers>=4.30.0
spacy>=3.6.0
numpy>=1.24.0
pandas>=2.0.0
psutil>=5.9.0
redis>=4.6.0
cryptography>=41.0.0

# Development Environment (everything needed for development)
[dev-full]
# Install with: pip install -e ".[dev-full]"
# This includes all development tools, testing frameworks, and quality tools

# Production Environment (everything needed for production)
[prod-full]
# Install with: pip install -e ".[prod-full]"
# This includes all production dependencies, monitoring, and security tools

# Testing Environment (everything needed for comprehensive testing)
[test-full]
# Install with: pip install -e ".[test-full]"
# This includes all testing frameworks, mocking tools, and quality assurance tools

# Documentation Environment (everything needed for documentation)
[docs-full]
# Install with: pip install -e ".[docs-full]"
# This includes all documentation generation tools and themes

# Performance Environment (everything needed for performance optimization)
[perf-full]
# Install with: pip install -e ".[perf-full]"
# This includes all performance profiling and optimization tools

# Security Environment (everything needed for security)
[security-full]
# Install with: pip install -e ".[security-full]"
# This includes all security scanning and compliance tools

# Monitoring Environment (everything needed for monitoring)
[monitoring-full]
# Install with: pip install -e ".[monitoring-full]"
# This includes all monitoring, observability, and alerting tools

# Web Dashboard Environment (everything needed for the web interface)
[dashboard-full]
# Install with: pip install -e ".[dashboard-full]"
# This includes all web dashboard dependencies and UI tools

# AI/ML Environment (everything needed for AI/ML functionality)
[ai-full]
# Install with: pip install -e ".[ai-full]"
# This includes all AI/ML libraries and tools

# Database Environment (everything needed for database operations)
[db-full]
# Install with: pip install -e ".[db-full]"
# This includes all database drivers and ORM tools

# Async Environment (everything needed for async operations)
[async-full]
# Install with: pip install -e ".[async-full]"
# This includes all async libraries and tools

# Cloud Environment (everything needed for cloud operations)
[cloud-full]
# Install with: pip install -e ".[cloud-full]"
# This includes all cloud provider SDKs and tools

# Visualization Environment (everything needed for data visualization)
[viz-full]
# Install with: pip install -e ".[viz-full]"
# This includes all visualization libraries and tools

# NLP Environment (everything needed for natural language processing)
[nlp-full]
# Install with: pip install -e ".[nlp-full]"
# This includes all NLP libraries and tools

# Time Series Environment (everything needed for time series analysis)
[timeseries-full]
# Install with: pip install -e ".[timeseries-full]"
# This includes all time series analysis libraries and tools

# Development Tools Environment (everything needed for development)
[tools-full]
# Install with: pip install -e ".[tools-full]"
# This includes all development tools and utilities

# Code Quality Environment (everything needed for code quality)
[quality-full]
# Install with: pip install -e ".[quality-full]"
# This includes all code quality tools and linters

# Performance Profiling Environment (everything needed for performance profiling)
[profiling-full]
# Install with: pip install -e ".[profiling-full]"
# This includes all performance profiling tools

# Security Scanning Environment (everything needed for security scanning)
[scanning-full]
# Install with: pip install -e ".[scanning-full]"
# This includes all security scanning tools

# Database Migration Environment (everything needed for database migrations)
[migrations-full]
# Install with: pip install -e ".[migrations-full]"
# This includes all database migration tools

# API Testing Environment (everything needed for API testing)
[apitest-full]
# Install with: pip install -e ".[apitest-full]"
# This includes all API testing tools

# Load Testing Environment (everything needed for load testing)
[loadtest-full]
# Install with: pip install -e ".[loadtest-full]"
# This includes all load testing tools

# Documentation Generation Environment (everything needed for documentation generation)
[docgen-full]
# Install with: pip install -e ".[docgen-full]"
# This includes all documentation generation tools

# Type Checking Environment (everything needed for type checking)
[types-full]
# Install with: pip install -e ".[types-full]"
# This includes all type checking tools

# Environment Management Environment (everything needed for environment management)
[env-full]
# Install with: pip install -e ".[env-full]"
# This includes all environment management tools

# Package Management Environment (everything needed for package management)
[pkg-full]
# Install with: pip install -e ".[pkg-full]"
# This includes all package management tools

# Complete Environment (everything)
[complete]
# Install with: pip install -e ".[complete]"
# This installs ALL dependencies for the complete system

# Installation Instructions:
# ========================
# 
# 1. Basic Installation (core functionality):
#    pip install -r requirements_v4_enhanced.txt
# 
# 2. Development Environment:
#    pip install -e ".[dev-full]"
# 
# 3. Production Environment:
#    pip install -e ".[prod-full]"
# 
# 4. Testing Environment:
#    pip install -e ".[test-full]"
# 
# 5. Complete Environment (everything):
#    pip install -e ".[complete]"
# 
# 6. Web Dashboard Only:
#    pip install -e ".[dashboard-full]"
# 
# 7. AI/ML Only:
#    pip install -e ".[ai-full]"
# 
# 8. Minimal Production:
#    pip install -e ".[prod-minimal]"
# 
# Note: Replace "requirements_v4_enhanced.txt" with the actual file path
#       when installing from this file directly.
# 
# GPU Support:
# ===========
# For CUDA acceleration, install PyTorch with CUDA support:
# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
# 
# System Dependencies:
# ===================
# Ubuntu/Debian: sudo apt-get install python3-dev build-essential libssl-dev libffi-dev
# CentOS/RHEL: sudo yum install python3-devel gcc openssl-devel libffi-devel
# macOS: brew install openssl libffi
# 
# Virtual Environment:
# ==================
# python -m venv venv
# source venv/bin/activate  # On Windows: venv\Scripts\activate
# pip install --upgrade pip setuptools wheel
# 
# AI Models:
# =========
# After installation, download required AI models:
# python -m spacy download en_core_web_sm
# 
# Verification:
# ===========
# python -c "import torch, transformers, spacy, fastapi; print('All core dependencies installed successfully!')"
