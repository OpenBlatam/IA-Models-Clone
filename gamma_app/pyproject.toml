[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gamma-app"
version = "1.0.0"
description = "AI-Powered Content Generation System - Advanced presentation, document, and web page creation"
authors = [
    {name = "Gamma App Team", email = "team@gammaapp.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Multimedia :: Graphics :: Presentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "content-generation", "presentations", "documents", "web-pages", "automation"]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "python-pptx>=0.6.21",
    "reportlab>=4.0.0",
    "weasyprint>=60.0",
    "pypdf2>=3.0.0",
    "python-docx>=0.8.11",
    "markdown>=3.5.0",
    "Pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "moviepy>=1.0.3",
    "requests>=2.31.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8.0",
    "spacy>=3.7.0",
    "textstat>=0.7.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "redis>=5.0.0",
    "websockets>=12.0",
    "socketio>=5.9.0",
    "celery>=5.3.0",
    "python-jose>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt>=4.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "toml>=0.10.0",
    "structlog>=23.1.0",
    "prometheus-client>=0.17.0",
    "sentry-sdk>=1.38.0",
    "click>=8.1.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "tqdm>=4.65.0",
    "httpx>=0.24.0",
    "aiohttp>=3.8.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "tokenizers>=0.13.0",
    "accelerate>=0.20.0",
    "diffusers>=0.18.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "peft>=0.7.0",
    "datasets>=2.15.0",
    "huggingface-hub>=0.19.0",
    "bitsandbytes>=0.41.0",
    "cryptography>=41.0.0",
    "PyJWT>=2.8.0",
    "psutil>=5.9.0",
    "line-profiler>=4.1.0",
    "memory-profiler>=0.61.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
monitoring = [
    "grafana-api>=1.0.3",
    "prometheus-api-client>=0.5.3",
]
ai = [
    "streamlit>=1.25.0",
    "gradio>=3.40.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/gamma-app/gamma-app"
Documentation = "https://gamma-app.readthedocs.io"
Repository = "https://github.com/gamma-app/gamma-app.git"
"Bug Tracker" = "https://github.com/gamma-app/gamma-app/issues"
Changelog = "https://github.com/gamma-app/gamma-app/blob/main/CHANGELOG.md"

[project.scripts]
gamma-app = "gamma_app.cli:main"
gamma-server = "gamma_app.scripts.start:main"
gamma-test = "gamma_app.scripts.test:main"
gamma-deploy = "gamma_app.scripts.deploy:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["gamma_app*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
gamma_app = ["templates/*", "static/*", "config/*.yaml", "config/*.yml"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["gamma_app", "tests"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "diffusers.*",
    "accelerate.*",
    "peft.*",
    "datasets.*",
    "huggingface_hub.*",
    "bitsandbytes.*",
    "cv2.*",
    "moviepy.*",
    "weasyprint.*",
    "reportlab.*",
    "PIL.*",
    "redis.*",
    "celery.*",
    "socketio.*",
    "psutil.*",
    "line_profiler.*",
    "memory_profiler.*",
    "prometheus_client.*",
    "structlog.*",
    "sentry_sdk.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
    "--durations=10",
    "--cov=gamma_app",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API tests",
    "slow: Slow running tests",
    "security: Security tests",
    "performance: Performance tests",
    "ai: AI model tests",
    "cache: Cache tests",
    "database: Database tests",
    "async: Async tests",
]
asyncio_mode = "auto"
timeout = 300
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:transformers.*",
    "ignore::UserWarning:torch.*",
]

# Coverage configuration
[tool.coverage.run]
source = ["gamma_app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Flake8 configuration
[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
    "migrations",
    "htmlcov",
    ".tox",
    ".coverage",
    ".pytest_cache",
]

# Bandit security linter
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

# Safety dependency checker
[tool.safety]
output = "json"

























