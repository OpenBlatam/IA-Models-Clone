# Instagram Captions API v10.0 - Refactored Requirements
# Essential libraries consolidated from v9.0 ultra-advanced version
# Simplified for better deployment and maintenance

# ============================================================================
# CORE FRAMEWORK (Essential)
# ============================================================================

fastapi==0.115.0
uvicorn[standard]==0.30.0
pydantic==2.8.0
pydantic-settings==2.5.0

# ============================================================================
# AI & ML LIBRARIES (Curated Essentials)
# ============================================================================

# Transformer models (core AI capability)
torch==2.4.0
transformers==4.53.0

# Performance optimization
numba==0.61.0
orjson==3.10.0

# Smart caching
cachetools==5.5.0

# ============================================================================
# DATA PROCESSING (Essential Only)
# ============================================================================

# JSON processing
python-json-logger==2.0.7

# HTTP client for external APIs
httpx==0.27.0

# ============================================================================
# DEVELOPMENT & TESTING (Optional)
# ============================================================================

# Testing framework
pytest==8.3.0
pytest-asyncio==0.25.0

# Code quality
black==24.8.0
isort==5.13.0

# ============================================================================
# PRODUCTION EXTRAS (Optional)
# ============================================================================

# Monitoring (lightweight)
psutil==6.1.0

# Security
python-multipart==0.0.10

# ============================================================================
# REFACTORING NOTES
# ============================================================================

# REMOVED from v9.0 (50+ libraries ‚Üí 15 essential):
# - langchain (complex LLM orchestration)
# - chromadb (heavy vector database)  
# - spacy (heavy NLP - replaced with simple logic)
# - jax (complex high-performance computing)
# - wandb (experiment tracking - too heavy)
# - prometheus-client (monitoring - replaced with simple metrics)
# - redis (external dependency)
# - sqlalchemy (database - not needed for core functionality)
# - pandas (data processing - not needed for captions)
# - scikit-learn (ML - replaced with simple algorithms)
# - matplotlib (plotting - not needed)
# - gradio (UI - separate concern)
# - streamlit (UI - separate concern)
# - jupyter (development - separate concern)

# KEPT essentials:
# ‚úÖ fastapi - Core API framework
# ‚úÖ torch - AI model backend  
# ‚úÖ transformers - Real AI models
# ‚úÖ numba - JIT optimization
# ‚úÖ orjson - Ultra-fast JSON
# ‚úÖ cachetools - Smart caching
# ‚úÖ pydantic - Data validation
# ‚úÖ uvicorn - ASGI server

# BENEFITS of refactoring:
# üöÄ 70% smaller dependency footprint
# ‚ö° Faster installation and deployment
# üõ°Ô∏è Fewer security vulnerabilities  
# üîß Easier maintenance and updates
# üíæ Lower memory usage
# üì¶ Simpler Docker images
# üèóÔ∏è Cleaner architecture 