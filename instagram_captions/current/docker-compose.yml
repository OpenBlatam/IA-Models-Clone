version: '3.8'

services:
  # Main diffusion system
  diffusion-system:
    build: .
    container_name: diffusion-system
    ports:
      - "8080:8080"  # API
      - "8000:8000"  # Metrics
    volumes:
      - ./models:/var/cache/diffusion_system/models
      - ./checkpoints:/var/checkpoints/diffusion_system
      - ./logs:/var/log/diffusion_system
      - ./config:/app/config
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis
      - mlflow
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: diffusion-postgres
    environment:
      POSTGRES_DB: diffusion_db
      POSTGRES_USER: diffusion_user
      POSTGRES_PASSWORD: diffusion_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: diffusion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # MLflow tracking
  mlflow:
    image: python:3.9-slim
    container_name: diffusion-mlflow
    command: >
      sh -c "pip install mlflow psycopg2-binary &&
              mlflow server --host 0.0.0.0 --port 5000
              --backend-store-uri postgresql://diffusion_user:diffusion_password@postgres:5432/diffusion_db
              --default-artifact-root /mlflow/artifacts"
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
    depends_on:
      - postgres
    restart: unless-stopped

  # Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: diffusion-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml
         --storage.tsdb.path=/prometheus
         --web.console.libraries=/etc/prometheus/console_libraries
         --web.console.templates=/etc/prometheus/consoles
         --storage.tsdb.retention.time=200h
         --web.enable-lifecycle'
    restart: unless-stopped

  # Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: diffusion-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: diffusion-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - diffusion-system
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mlflow_data:
  prometheus_data:
  grafana_data:


