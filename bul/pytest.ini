[tool:pytest]
# Pytest configuration for BUL system

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --benchmark-only
    --benchmark-skip

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    api: marks tests as API tests
    core: marks tests as core functionality tests
    agents: marks tests as agent tests
    dashboard: marks tests as dashboard tests
    admin: marks tests as admin panel tests

# Async configuration
asyncio_mode = auto

# Test timeout
timeout = 300

# Minimum version
minversion = 7.0

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:httpx.*
    ignore::UserWarning:aiohttp.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Environment variables for testing
env =
    ENVIRONMENT = testing
    DEBUG = true
    OPENROUTER_API_KEY = test_key
    OPENAI_API_KEY = test_openai_key
    SECURITY__SECRET_KEY = test_secret_key_for_testing_only
    DATABASE__URL = sqlite:///test_bul.db
    CACHE__BACKEND = memory
    LOGGING__LEVEL = DEBUG
    LOGGING__JSON_LOGS = false


