version: '3.8'

services:
  # Bulk TruthGPT Service
  bulk_truthgpt:
    build: .
    container_name: bulk_truthgpt
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://bulk_truthgpt:password@postgres:5432/bulk_truthgpt
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - TRUTHGPT_MODEL_PATH=/app/models/truthgpt
      - STORAGE_PATH=/app/storage
      - TEMPLATES_PATH=/app/templates
      - MODELS_PATH=/app/models
      - KNOWLEDGE_PATH=/app/knowledge_base
    volumes:
      - ./storage:/app/storage
      - ./templates:/app/templates
      - ./models:/app/models
      - ./knowledge_base:/app/knowledge_base
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bulk_truthgpt_postgres
    environment:
      - POSTGRES_DB=bulk_truthgpt
      - POSTGRES_USER=bulk_truthgpt
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bulk_truthgpt_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bulk_truthgpt_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - bulk_truthgpt
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: bulk_truthgpt_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: bulk_truthgpt_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # Elasticsearch (Optional)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: bulk_truthgpt_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

  # Kibana (Optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: bulk_truthgpt_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - bulk_truthgpt_network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  bulk_truthgpt_network:
    driver: bridge