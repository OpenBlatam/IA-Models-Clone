name: HeyGen AI Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'agents/backend/onyx/server/features/heygen_ai/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'agents/backend/onyx/server/features/heygen_ai/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Run health check
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python test_health_check.py
    
    - name: Run import validation
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python validate_tests.py
    
    - name: Run unit tests
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pytest tests/ -m unit -v --tb=short
    
    - name: Run integration tests
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pytest tests/ -m integration -v --tb=short
    
    - name: Run enterprise tests
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pytest tests/test_enterprise_features.py -v --tb=short
    
    - name: Run tests with coverage
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pytest tests/ --cov=core --cov-report=xml --cov-report=html --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: agents/backend/onyx/server/features/heygen_ai/coverage.xml
        flags: heygen-ai
        name: heygen-ai-coverage
        fail_ci_if_error: false
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: agents/backend/onyx/server/features/heygen_ai/htmlcov/
    
    - name: Run CI test runner
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python ci_test_runner.py --verbose --coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: agents/backend/onyx/server/features/heygen_ai/ci_test_results.json

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting dependencies
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run black
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        black --check --diff .
    
    - name: Run isort
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        isort --check-only --diff .
    
    - name: Run flake8
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run mypy
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        mypy . --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run bandit security scan
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        bandit -r . -f json -o bandit-report.json || true
    
    - name: Run safety check
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          agents/backend/onyx/server/features/heygen_ai/bandit-report.json
          agents/backend/onyx/server/features/heygen_ai/safety-report.json

  performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Run performance tests
      working-directory: agents/backend/onyx/server/features/heygen_ai
      run: |
        python -m pytest tests/ -m performance -v --benchmark-only --benchmark-save=performance
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: agents/backend/onyx/server/features/heygen_ai/.benchmarks/





