import pytest

from vulnerability_scanner import WebVulnerabilityScanner


@pytest.mark.asyncio
async def test_scan_multiple_urls_propagates_scan_errors(monkeypatch):
    async def failing_scan(self, url):
        raise RuntimeError("fail")

    monkeypatch.setattr(WebVulnerabilityScanner, "scan_single_url", failing_scan)

    scanner = WebVulnerabilityScanner()
    res = await scanner.scan_multiple_urls(["https://a", "https://b"]) 
    # when exceptions occur, each entry becomes a list with a 'scan_error' finding
    assert set(res.keys()) == {"https://a", "https://b"}
    assert all(r and r[0].vulnerability_type in {"scan_error"} for r in res.values())













