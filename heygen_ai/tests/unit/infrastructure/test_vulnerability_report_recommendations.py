from vulnerability_scanner import WebVulnerabilityScanner, VulnerabilityFinding, VulnerabilitySeverity
from datetime import datetime


def test_generate_scan_report_recommendations_accumulate():
    scanner = WebVulnerabilityScanner()
    findings = {
        "a": [
            VulnerabilityFinding(
                vulnerability_type="sql_injection",
                severity_level=VulnerabilitySeverity.HIGH,
                description="",
                target_url="a",
                scan_timestamp=datetime.utcnow(),
            ),
            VulnerabilityFinding(
                vulnerability_type="cross_site_scripting",
                severity_level=VulnerabilitySeverity.HIGH,
                description="",
                target_url="a",
                scan_timestamp=datetime.utcnow(),
            ),
            VulnerabilityFinding(
                vulnerability_type="http_usage",
                severity_level=VulnerabilitySeverity.HIGH,
                description="",
                target_url="a",
                scan_timestamp=datetime.utcnow(),
            ),
        ]
    }
    report = scanner.generate_scan_report(findings)
    recs = "\n".join(report["recommendations"])
    assert "parameterized queries" in recs
    assert "Content Security Policy" in recs
    assert "Redirect HTTP to HTTPS" in recs













