import pytest

from vulnerability_scanner import (
    WebVulnerabilityScanner,
    VulnerabilityFinding,
    VulnerabilitySeverity,
)


@pytest.mark.asyncio
async def test_generate_scan_report_counts_and_recommendations():
    scanner = WebVulnerabilityScanner()

    results = {
        'http://insecure': [
            VulnerabilityFinding(
                vulnerability_type='http_usage',
                severity_level=VulnerabilitySeverity.HIGH,
                description='uses http',
                target_url='http://insecure',
            )
        ],
        'https://xss.example': [
            VulnerabilityFinding(
                vulnerability_type='cross_site_scripting',
                severity_level=VulnerabilitySeverity.HIGH,
                description='xss',
                target_url='https://xss.example',
            )
        ],
    }

    report = scanner.generate_scan_report(results)
    assert report['scan_summary']['total_targets_scanned'] == 2
    assert report['severity_distribution']['high'] >= 1
    assert 'recommendations' in report
    assert any('HTTPS' in r or 'HSTS' in r for r in report['recommendations'])













