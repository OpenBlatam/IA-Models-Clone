"""
Shared Services Package
=======================

Shared services for the application.
"""

from .background_tasks import (
    BackgroundTaskService,
    Task,
    ScheduledTask,
    TaskStatus,
    TaskPriority,
    background_task_service,
    submit_background_task,
    schedule_recurring_task,
    cancel_background_task,
    get_task_status,
    get_all_tasks,
    get_service_stats,
    initialize_background_tasks
)

from .health_checker import (
    HealthChecker,
    HealthCheck,
    HealthStatus,
    SystemMetrics,
    health_checker,
    start_health_checker,
    stop_health_checker,
    run_health_check,
    run_all_health_checks,
    get_health_summary,
    get_overall_health_status,
    register_health_check
)

from .metrics_collector import (
    MetricsCollector,
    Metric,
    MetricAggregation,
    MetricType,
    metrics_collector,
    start_metrics_collector,
    stop_metrics_collector,
    increment_counter,
    set_gauge,
    observe_histogram,
    observe_summary,
    time_function,
    get_metric,
    get_all_metrics,
    get_metrics_summary,
    export_metrics,
    clear_metrics,
    record_http_request,
    record_workflow_operation,
    record_database_operation,
    record_cache_operation
)

from .rate_limiter import (
    RateLimiter,
    RateLimitConfig,
    RateLimitResult,
    RateLimitAlgorithm,
    RateLimitBackend,
    rate_limiter,
    start_rate_limiter,
    stop_rate_limiter,
    check_rate_limit,
    get_rate_limit_stats,
    reset_rate_limit,
    clear_all_rate_limits,
    rate_limit_decorator,
    get_client_identifier,
    get_api_key_identifier,
    get_user_identifier
)

from .security_service import (
    SecurityService,
    SecurityConfig,
    SecurityLevel,
    EncryptionAlgorithm,
    UserSession,
    SecurityEvent,
    security_service,
    hash_password,
    verify_password,
    validate_password_strength,
    generate_secure_password,
    create_access_token,
    create_refresh_token,
    verify_token,
    refresh_access_token,
    create_session,
    validate_session,
    invalidate_session,
    record_failed_login,
    is_account_locked,
    encrypt_data,
    decrypt_data,
    generate_api_key,
    get_security_events,
    get_security_stats
)

from .audit_service import (
    AuditService,
    AuditEvent,
    AuditEventType,
    AuditSeverity,
    AuditStatus,
    AuditQuery,
    AuditReport,
    audit_service,
    start_audit_service,
    stop_audit_service,
    log_audit_event,
    query_audit_events,
    get_audit_statistics,
    export_audit_events,
    log_authentication_event,
    log_data_event,
    log_security_event
)

from .notification_service import (
    NotificationService,
    NotificationTemplate,
    Notification,
    NotificationType,
    NotificationPriority,
    NotificationStatus,
    NotificationConfig,
    notification_service,
    start_notification_service,
    stop_notification_service,
    send_notification,
    send_template_notification,
    get_notification_status,
    get_notification_statistics,
    send_welcome_email,
    send_workflow_completed_notification,
    send_otp_sms,
    send_workflow_alert_push
)

from .analytics_service import (
    AnalyticsService,
    AnalyticsEvent,
    AnalyticsEventType,
    AnalyticsMetricType,
    AnalyticsTimeRange,
    AnalyticsMetric,
    AnalyticsReport,
    AnalyticsInsight,
    analytics_service,
    start_analytics_service,
    stop_analytics_service,
    track_event,
    record_metric,
    get_analytics_summary,
    get_workflow_analytics,
    get_user_analytics,
    get_performance_analytics,
    get_insights,
    export_analytics,
    track_workflow_created,
    track_workflow_completed,
    track_workflow_failed,
    track_user_login,
    track_api_request,
    track_error
)

from .ai_service import (
    AIService,
    AIRequest,
    AIResponse,
    AIProvider,
    AIModelType,
    AIQualityLevel,
    AIModel,
    ai_service,
    start_ai_service,
    stop_ai_service,
    generate_content,
    analyze_text,
    batch_generate,
    get_available_models,
    get_model_info,
    get_usage_statistics,
    summarize_text,
    extract_entities,
    analyze_sentiment,
    translate_text,
    generate_code
)

from .cache_service import (
    CacheService,
    CacheConfig,
    CacheEntry,
    CacheMetrics,
    CacheBackend,
    CacheStrategy,
    CacheCompression,
    MemoryCache,
    RedisCache,
    cache_service,
    start_cache_service,
    stop_cache_service,
    get_from_cache,
    set_in_cache,
    delete_from_cache,
    clear_cache,
    invalidate_cache_pattern,
    get_cache_metrics,
    generate_cache_key,
    cache_result,
    cache_invalidate
)

from .database_service import (
    DatabaseService,
    DatabaseConfig,
    DatabaseMetrics,
    DatabaseType,
    ConnectionStatus,
    database_service,
    start_database_service,
    stop_database_service,
    get_database_session,
    get_redis_connection,
    execute_query,
    execute_transaction,
    run_migrations,
    create_migration,
    backup_database,
    restore_database,
    get_database_metrics,
    optimize_database,
    get_database_info,
    with_database_session,
    with_redis_connection
)

from .file_service import (
    FileService,
    FileMetadata,
    StorageConfig,
    StorageBackend,
    FileType,
    CompressionType,
    file_service,
    start_file_service,
    stop_file_service,
    upload_file,
    download_file,
    delete_file,
    list_files,
    get_file_metadata,
    update_file_metadata,
    generate_thumbnail,
    get_storage_stats
)

from .search_service import (
    SearchService,
    SearchConfig,
    SearchResult,
    SearchQuery,
    SearchIndex,
    SearchBackend,
    SearchType,
    SearchOperator,
    search_service,
    start_search_service,
    stop_search_service,
    search_documents,
    index_document,
    delete_document,
    get_search_suggestions,
    get_search_facets,
    get_search_stats
)

from .optimization_service import (
    OptimizationService,
    OptimizationConfig,
    OptimizationResult,
    OptimizationType,
    OptimizationLevel,
    SystemMetrics,
    optimization_service,
    start_optimization_service,
    stop_optimization_service,
    optimize_system,
    get_system_metrics,
    get_optimization_summary,
    get_thread_pool,
    get_process_pool,
    run_cpu_intensive_task,
    run_io_intensive_task,
    optimize_performance,
    memory_efficient,
    resource_monitored
)

from .monitoring_service import (
    MonitoringService,
    Alert,
    AlertEvent,
    AlertLevel,
    AlertCondition,
    Metric,
    MetricType,
    SystemHealth,
    monitoring_service,
    start_monitoring_service,
    stop_monitoring_service,
    add_alert,
    remove_alert,
    update_alert,
    add_alert_handler,
    add_metric_handler,
    record_metric,
    get_metrics,
    get_all_metrics,
    get_alert_events,
    get_system_health_history,
    get_current_health,
    get_metrics_summary,
    get_health_dashboard,
    monitor_performance,
    monitor_errors
)

__all__ = [
    # Background Tasks
    "BackgroundTaskService",
    "Task",
    "ScheduledTask",
    "TaskStatus",
    "TaskPriority",
    "background_task_service",
    "submit_background_task",
    "schedule_recurring_task",
    "cancel_background_task",
    "get_task_status",
    "get_all_tasks",
    "get_service_stats",
    "initialize_background_tasks",
    
    # Health Checker
    "HealthChecker",
    "HealthCheck",
    "HealthStatus",
    "SystemMetrics",
    "health_checker",
    "start_health_checker",
    "stop_health_checker",
    "run_health_check",
    "run_all_health_checks",
    "get_health_summary",
    "get_overall_health_status",
    "register_health_check",
    
    # Metrics Collector
    "MetricsCollector",
    "Metric",
    "MetricAggregation",
    "MetricType",
    "metrics_collector",
    "start_metrics_collector",
    "stop_metrics_collector",
    "increment_counter",
    "set_gauge",
    "observe_histogram",
    "observe_summary",
    "time_function",
    "get_metric",
    "get_all_metrics",
    "get_metrics_summary",
    "export_metrics",
    "clear_metrics",
    "record_http_request",
    "record_workflow_operation",
    "record_database_operation",
    "record_cache_operation",
    
    # Rate Limiter
    "RateLimiter",
    "RateLimitConfig",
    "RateLimitResult",
    "RateLimitAlgorithm",
    "RateLimitBackend",
    "rate_limiter",
    "start_rate_limiter",
    "stop_rate_limiter",
    "check_rate_limit",
    "get_rate_limit_stats",
    "reset_rate_limit",
    "clear_all_rate_limits",
    "rate_limit_decorator",
    "get_client_identifier",
    "get_api_key_identifier",
    "get_user_identifier",
    
    # Security Service
    "SecurityService",
    "SecurityConfig",
    "SecurityLevel",
    "EncryptionAlgorithm",
    "UserSession",
    "SecurityEvent",
    "security_service",
    "hash_password",
    "verify_password",
    "validate_password_strength",
    "generate_secure_password",
    "create_access_token",
    "create_refresh_token",
    "verify_token",
    "refresh_access_token",
    "create_session",
    "validate_session",
    "invalidate_session",
    "record_failed_login",
    "is_account_locked",
    "encrypt_data",
    "decrypt_data",
    "generate_api_key",
    "get_security_events",
    "get_security_stats",
    
    # Audit Service
    "AuditService",
    "AuditEvent",
    "AuditEventType",
    "AuditSeverity",
    "AuditStatus",
    "AuditQuery",
    "AuditReport",
    "audit_service",
    "start_audit_service",
    "stop_audit_service",
    "log_audit_event",
    "query_audit_events",
    "get_audit_statistics",
    "export_audit_events",
    "log_authentication_event",
    "log_data_event",
    "log_security_event",
    
    # Notification Service
    "NotificationService",
    "NotificationTemplate",
    "Notification",
    "NotificationType",
    "NotificationPriority",
    "NotificationStatus",
    "NotificationConfig",
    "notification_service",
    "start_notification_service",
    "stop_notification_service",
    "send_notification",
    "send_template_notification",
    "get_notification_status",
    "get_notification_statistics",
    "send_welcome_email",
    "send_workflow_completed_notification",
    "send_otp_sms",
    "send_workflow_alert_push",
    
    # Analytics Service
    "AnalyticsService",
    "AnalyticsEvent",
    "AnalyticsEventType",
    "AnalyticsMetricType",
    "AnalyticsTimeRange",
    "AnalyticsMetric",
    "AnalyticsReport",
    "AnalyticsInsight",
    "analytics_service",
    "start_analytics_service",
    "stop_analytics_service",
    "track_event",
    "record_metric",
    "get_analytics_summary",
    "get_workflow_analytics",
    "get_user_analytics",
    "get_performance_analytics",
    "get_insights",
    "export_analytics",
    "track_workflow_created",
    "track_workflow_completed",
    "track_workflow_failed",
    "track_user_login",
    "track_api_request",
    "track_error",
    
    # AI Service
    "AIService",
    "AIRequest",
    "AIResponse",
    "AIProvider",
    "AIModelType",
    "AIQualityLevel",
    "AIModel",
    "ai_service",
    "start_ai_service",
    "stop_ai_service",
    "generate_content",
    "analyze_text",
    "batch_generate",
    "get_available_models",
    "get_model_info",
    "get_usage_statistics",
    "summarize_text",
    "extract_entities",
    "analyze_sentiment",
    "translate_text",
    "generate_code",
    
    # Cache Service
    "CacheService",
    "CacheConfig",
    "CacheEntry",
    "CacheMetrics",
    "CacheBackend",
    "CacheStrategy",
    "CacheCompression",
    "MemoryCache",
    "RedisCache",
    "cache_service",
    "start_cache_service",
    "stop_cache_service",
    "get_from_cache",
    "set_in_cache",
    "delete_from_cache",
    "clear_cache",
    "invalidate_cache_pattern",
    "get_cache_metrics",
    "generate_cache_key",
    "cache_result",
    "cache_invalidate",
    
    # Database Service
    "DatabaseService",
    "DatabaseConfig",
    "DatabaseMetrics",
    "DatabaseType",
    "ConnectionStatus",
    "database_service",
    "start_database_service",
    "stop_database_service",
    "get_database_session",
    "get_redis_connection",
    "execute_query",
    "execute_transaction",
    "run_migrations",
    "create_migration",
    "backup_database",
    "restore_database",
    "get_database_metrics",
    "optimize_database",
    "get_database_info",
    "with_database_session",
    "with_redis_connection",
    
    # File Service
    "FileService",
    "FileMetadata",
    "StorageConfig",
    "StorageBackend",
    "FileType",
    "CompressionType",
    "file_service",
    "start_file_service",
    "stop_file_service",
    "upload_file",
    "download_file",
    "delete_file",
    "list_files",
    "get_file_metadata",
    "update_file_metadata",
    "generate_thumbnail",
    "get_storage_stats",
    
    # Search Service
    "SearchService",
    "SearchConfig",
    "SearchResult",
    "SearchQuery",
    "SearchIndex",
    "SearchBackend",
    "SearchType",
    "SearchOperator",
    "search_service",
    "start_search_service",
    "stop_search_service",
    "search_documents",
    "index_document",
    "delete_document",
    "get_search_suggestions",
    "get_search_facets",
    "get_search_stats",
    
    # Optimization Service
    "OptimizationService",
    "OptimizationConfig",
    "OptimizationResult",
    "OptimizationType",
    "OptimizationLevel",
    "SystemMetrics",
    "optimization_service",
    "start_optimization_service",
    "stop_optimization_service",
    "optimize_system",
    "get_system_metrics",
    "get_optimization_summary",
    "get_thread_pool",
    "get_process_pool",
    "run_cpu_intensive_task",
    "run_io_intensive_task",
    "optimize_performance",
    "memory_efficient",
    "resource_monitored",
    
    # Monitoring Service
    "MonitoringService",
    "Alert",
    "AlertEvent",
    "AlertLevel",
    "AlertCondition",
    "Metric",
    "MetricType",
    "SystemHealth",
    "monitoring_service",
    "start_monitoring_service",
    "stop_monitoring_service",
    "add_alert",
    "remove_alert",
    "update_alert",
    "add_alert_handler",
    "add_metric_handler",
    "record_metric",
    "get_metrics",
    "get_all_metrics",
    "get_alert_events",
    "get_system_health_history",
    "get_current_health",
    "get_metrics_summary",
    "get_health_dashboard",
    "monitor_performance",
    "monitor_errors"
]