# Document Workflow Chain Service Docker Compose
# ===============================================

version: '3.8'

services:
  document-workflow-chain:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: document-workflow-chain-service
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - AI_CLIENT_TYPE=openai  # or anthropic, cohere, etc.
      - AI_API_KEY=${AI_API_KEY}
      - AI_MODEL=gpt-4  # or claude-3, etc.
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - blatam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/document-workflow-chain/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:7-alpine
    container_name: document-workflow-chain-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - blatam-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    container_name: document-workflow-chain-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=document_workflow_chain
      - POSTGRES_USER=workflow_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blatam-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: document-workflow-chain-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - blatam-network
    restart: unless-stopped
    depends_on:
      - document-workflow-chain

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  blatam-network:
    external: true


